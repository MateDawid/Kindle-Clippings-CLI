---
name: Main

on: [ push ]

jobs:
  quality_and_tests:
    name: Code quality and tests
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: "Install dependencies"
        run: |
          python3 -m venv venv
          source ./venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install -U pip setuptools
          python3 -m pip install poetry
          poetry install

      - name: "[Code quality] black"
        run: |
          source venv/bin/activate
          black . --line-length=120 --check
      - name: "[Code quality] isort"
        run: |
          source venv/bin/activate
          isort . --check-only --profile black
      - name: "[Code quality] flake8"
        run: |
          source venv/bin/activate
          flake8 .
      - name: "[Code quality] bandit"
        run: |
          source venv/bin/activate
          bandit -c pyproject.toml -r .
      - name: "[Code quality] safety"
        run: |
          source venv/bin/activate
          safety check
      - name: "[Tests] pytest"
        run: |
          source venv/bin/activate
          pytest

#  publish:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      id-token: write
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install poetry
#          poetry install
#
#      - name: Build package
#        run: poetry build
#
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}